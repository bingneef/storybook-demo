version: '3.5'
services:
  # App
  app_base: &app_base
    build:
      context: ./app
      dockerfile: ./Dockerfile
    working_dir: /app
    volumes:
      - ./app:/app
      - ./docker/data/app/node_modules:/app/node_modules
    environment:
      NODE_ENV: development
    command: >
      sh -c "pwd"

  storybook:
    <<: *app_base
    container_name: frontmania_storybook
    ports:
      - '19009:9009'
    command: >
      sh -c "yarn install && 
      yarn storybook -h 0.0.0.0 --ci"
  
  app_test:
    <<: *app_base
    container_name: frontmania_app_test
    image: bingneef/jstest
    links:
      - storybook:storybook
      - mock_build:mock_build
      - mock_server:mock_server
    depends_on:
      - storybook
      - mock_build
      - mock_server
    environment:
      - CI=true
    command: >
      sh -c "yarn install &&
      yarn docker:test:full"
  
  mock_build:
    <<: *app_base
    container_name: frontmania_mock_build
    environment:
      - REACT_APP_MOCK_API=true
    ports:
      - '15000:5000'
    command: >
      sh -c "yarn install &&
      yarn build &&
      yarn serve build --single"

  app:
    <<: *app_base
    container_name: frontmania_app
    ports:
      - '13000:3000'
    depends_on:
      - storybook
    command: >
      sh -c "yarn install &&
      yarn start"

  # SERVER
  elasticsearch:
    container_name: 'frontmania_elasticsearch'
    image: blacktop/elasticsearch:6.2.2
    volumes:
      - ./docker/data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'

  redis:
    image: redis:4.0.11-alpine
    container_name: 'frontmania_redis'
    environment:
      - appendonly=yes
    volumes:
      - ./docker/data/redis:/data
    ports:
      - '6379:6379'

  mongodb:
    image: mvertes/alpine-mongo:4.0.1-0
    container_name: 'frontmania_mongodb'
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER=root
      - MONGODB_PASS=root
    volumes:
      - ./docker/data/mongodb:/data/db
    ports:
      - '27017:27017'

  faktory:
    image: contribsys/faktory:latest
    container_name: 'frontmania_faktory'
    volumes:
      - ./docker/data/faktory-data:/var/lib/faktory
    ports:
      - '7419:7419'
      - '7420:7420'

  server_base: &server_base
    build:
      context: ./server
      dockerfile: ./Dockerfile
    volumes:
      - ./server:/app
      - ~/.ssh:/root/.ssh
    environment:
      NODE_ENV: development

  server:
    <<: *server_base
    container_name: 'frontmania_server'
    command: >
      sh -c "yarn install &&
      yarn start"
    environment:
      - DOCKER_ENV=true
      - PORT=4200
    volumes:
      - ./server:/app
      - ./docker/data/server/node_modules:/app/node_modules
    ports:
      - "4200:4200"
    depends_on:
      - elasticsearch
      - mongodb
      - faktory
      - redis
  
  mock_server:
    <<: *server_base
    container_name: 'frontmania_mock_server'
    command: >
      sh -c "yarn install &&
      yarn start"
    environment:
      - DOCKER_ENV=true
      - MOCK_SERVER=true
      - PORT=4201
    ports:
      - "4201:4201"

  server_test:
    <<: *server_base
    command: yarn test
    environment:
      SKIP_COVERAGE: null